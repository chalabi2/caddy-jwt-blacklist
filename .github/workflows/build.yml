name: Build

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.22, 1.23]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-build-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-build-${{ matrix.go-version }}-

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Run go vet
        run: go vet ./...

      - name: Install xcaddy
        run: go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest

      - name: Build with xcaddy (unified JWT + blacklist module)
        run: xcaddy build --with github.com/chalabi2/caddy-jwt-blacklist=.

      - name: Test binary
        run: ./caddy version

      - name: List modules to verify integration
        run: ./caddy list-modules | grep -E "(jwt|blacklist|auth)"

      - name: Validate example Caddyfile
        run: ./caddy validate --config example-configs/Caddyfile --adapter caddyfile

      - name: Validate example JSON config
        run: ./caddy validate --config example-configs/caddy.json

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: caddy-jwt-blacklist-unified-go${{ matrix.go-version }}
          path: ./caddy
          retention-days: 7

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: latest
          args: --timeout=10m

  validate-configs:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Download built binary
        uses: actions/download-artifact@v4
        with:
          name: caddy-jwt-blacklist-unified-go1.23
          path: .

      - name: Make binary executable
        run: chmod +x ./caddy

      - name: Validate all example configurations
        run: |
          echo "Validating Caddyfile..."
          ./caddy validate --config example-configs/Caddyfile --adapter caddyfile

          echo "Validating JSON config..."
          ./caddy validate --config example-configs/caddy.json

          echo "Checking for proper module registration..."
          ./caddy list-modules | grep "http.handlers.jwt_blacklist" || (echo "Module not found!" && exit 1)

          echo "All configurations validated successfully!"
