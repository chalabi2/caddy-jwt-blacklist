# Basic JWT Blacklist Configuration
# Shows JWT blacklist functionality with both local and TLS Redis support

{
	admin localhost:2019
	
	log {
		output stdout
		format json
		level INFO
	}
}

# Basic JWT blacklist example
localhost:8080 {
	route {
		# JWT Blacklist middleware - works with both local and TLS Redis
		jwt_blacklist {
			redis_addr {env.REDIS_URL}        # e.g., localhost:6379 or redis-cloud.com:12345
			redis_password {env.REDIS_PASSWORD}
			redis_db 0
			jwt_secret {env.JWT_SECRET}
			blacklist_prefix "BLACKLIST:key:"
			fail_open true
			timeout 50ms
			log_blocked true
			
			# Optional TLS configuration - uncomment for TLS Redis
			# tls {
			#     enabled true
			#     min_version "1.2"
			# }
		}
		
		# Test endpoints
		handle /health {
			respond `{"status":"ok","service":"jwt-blacklist","timestamp":"{time.now.unix}"}`
		}
		
		handle /api/* {
			respond `{"message":"API access granted","path":"{uri}","timestamp":"{time.now.unix}"}`
		}
		
		handle {
			respond `{"message":"JWT Blacklist Test Server","endpoints":["/health","/api/*"]}`
		}
	}
	
	# Error handling for blacklisted tokens
	handle_errors {
		@blacklist_error expression `{http.error.status_code} == 401 && {http.error.message} contains "blacklisted"`
		respond @blacklist_error `{"error":"api_key_blacklisted","message":"API key has been disabled","code":401}` 401
		
		respond `{"error":"{http.error.status_code}","message":"{http.error.status_text}"}`
	}
}